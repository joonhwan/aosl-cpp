// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema
// to C++ data binding compiler, in the Proprietary License mode.
// You should have received a proprietary license from Code Synthesis
// Tools CC prior to generating this code. See the license text for
// conditions.
//

#ifndef AOSLCPP_AOSL__BOX_INL
#define AOSLCPP_AOSL__BOX_INL

// Begin prologue.
//
//
// End prologue.

#include "aosl/vector.hpp"
#include "aosl/vector.inl"

#include "aosl/transformation.hpp"
#include "aosl/transformation.inl"

namespace aosl
{
  // Box
  // 

  inline
  const Box::SizeOptional& Box::
  size () const
  {
    return this->size_;
  }

  inline
  Box::SizeOptional& Box::
  size ()
  {
    return this->size_;
  }

  inline
  void Box::
  size (const SizeType& x)
  {
    this->size_.set (x);
  }

  inline
  void Box::
  size (const SizeOptional& x)
  {
    this->size_ = x;
  }

  inline
  void Box::
  size (::std::auto_ptr< SizeType > x)
  {
    this->size_.set (x);
  }

  inline
  const Box::TransformationOptional& Box::
  transformation () const
  {
    return this->transformation_;
  }

  inline
  Box::TransformationOptional& Box::
  transformation ()
  {
    return this->transformation_;
  }

  inline
  void Box::
  transformation (const TransformationType& x)
  {
    this->transformation_.set (x);
  }

  inline
  void Box::
  transformation (const TransformationOptional& x)
  {
    this->transformation_ = x;
  }

  inline
  void Box::
  transformation (::std::auto_ptr< TransformationType > x)
  {
    this->transformation_.set (x);
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // AOSLCPP_AOSL__BOX_INL
