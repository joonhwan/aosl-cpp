// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema
// to C++ data binding compiler, in the Proprietary License mode.
// You should have received a proprietary license from Code Synthesis
// Tools CC prior to generating this code. See the license text for
// conditions.
//

#ifndef AOSLCPP_AOSL__EVENT_INPUT_INL
#define AOSLCPP_AOSL__EVENT_INPUT_INL

// Begin prologue.
//
//
// End prologue.

#include "aosl/event.inl"

#include "aosl/input_key.hpp"
#include "aosl/input_key.inl"

#include "aosl/input_value.hpp"
#include "aosl/input_value.inl"

namespace aosl
{
  // Event_input
  // 

  inline
  const Event_input::KeyType& Event_input::
  key () const
  {
    return this->key_.get ();
  }

  inline
  Event_input::KeyType& Event_input::
  key ()
  {
    return this->key_.get ();
  }

  inline
  void Event_input::
  key (const KeyType& x)
  {
    this->key_.set (x);
  }

  inline
  void Event_input::
  key (::std::auto_ptr< KeyType > x)
  {
    this->key_.set (x);
  }

  inline
  ::std::auto_ptr< Event_input::KeyType > Event_input::
  detach_key ()
  {
    return this->key_.detach ();
  }

  inline
  const Event_input::ValueType& Event_input::
  value () const
  {
    return this->value_.get ();
  }

  inline
  Event_input::ValueType& Event_input::
  value ()
  {
    return this->value_.get ();
  }

  inline
  void Event_input::
  value (const ValueType& x)
  {
    this->value_.set (x);
  }

  inline
  void Event_input::
  value (::std::auto_ptr< ValueType > x)
  {
    this->value_.set (x);
  }

  inline
  ::std::auto_ptr< Event_input::ValueType > Event_input::
  detach_value ()
  {
    return this->value_.detach ();
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // AOSLCPP_AOSL__EVENT_INPUT_INL
