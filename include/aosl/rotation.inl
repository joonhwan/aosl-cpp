// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema
// to C++ data binding compiler, in the Proprietary License mode.
// You should have received a proprietary license from Code Synthesis
// Tools CC prior to generating this code. See the license text for
// conditions.
//

#ifndef AOSLCPP_AOSL__ROTATION_INL
#define AOSLCPP_AOSL__ROTATION_INL

// Begin prologue.
//
//
// End prologue.

#include "aosl/angle.hpp"
#include "aosl/angle.inl"

namespace aosl
{
  // Rotation
  // 

  inline
  const Rotation::YawType& Rotation::
  yaw () const
  {
    return this->yaw_.get ();
  }

  inline
  Rotation::YawType& Rotation::
  yaw ()
  {
    return this->yaw_.get ();
  }

  inline
  void Rotation::
  yaw (const YawType& x)
  {
    this->yaw_.set (x);
  }

  inline
  void Rotation::
  yaw (::std::auto_ptr< YawType > x)
  {
    this->yaw_.set (x);
  }

  inline
  Rotation::YawType Rotation::
  yaw_default_value ()
  {
    return YawType (.0);
  }

  inline
  const Rotation::PitchType& Rotation::
  pitch () const
  {
    return this->pitch_.get ();
  }

  inline
  Rotation::PitchType& Rotation::
  pitch ()
  {
    return this->pitch_.get ();
  }

  inline
  void Rotation::
  pitch (const PitchType& x)
  {
    this->pitch_.set (x);
  }

  inline
  void Rotation::
  pitch (::std::auto_ptr< PitchType > x)
  {
    this->pitch_.set (x);
  }

  inline
  Rotation::PitchType Rotation::
  pitch_default_value ()
  {
    return PitchType (.0);
  }

  inline
  const Rotation::RollType& Rotation::
  roll () const
  {
    return this->roll_.get ();
  }

  inline
  Rotation::RollType& Rotation::
  roll ()
  {
    return this->roll_.get ();
  }

  inline
  void Rotation::
  roll (const RollType& x)
  {
    this->roll_.set (x);
  }

  inline
  void Rotation::
  roll (::std::auto_ptr< RollType > x)
  {
    this->roll_.set (x);
  }

  inline
  Rotation::RollType Rotation::
  roll_default_value ()
  {
    return RollType (.0);
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // AOSLCPP_AOSL__ROTATION_INL
